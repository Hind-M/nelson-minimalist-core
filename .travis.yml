# Travis: Macos

language: cpp
sudo: required

cache:
  directories:
    - ${TRAVIS_BUILD_DIR}/deps

branches:
  only:
    - master

matrix:
  include:
    - os: linux
      env: ARCH="x86_64"
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env: COMPILER=g++-6 TEST_CXX14=true BOOST_VERSION=1.61.0

    - os: osx
      env: ARCH="x86_64"
      compiler: clang
      osx_image: xcode8.2


before_install:
    - if [ `uname` = "Linux" ];
      then sudo add-apt-repository --yes ppa:ubuntu-sdk-team/ppa
      sudo sudo apt-get update -qq;
      sudo apt-get install qtbase5-dev qtdeclarative5-dev libqt5webkit5-dev libsqlite3-dev;
      sudo apt-get install qt5-default qttools5-dev-tools;
      sudo apt-get install gettext;
      sudo apt-get install pkg-config;
      sudo apt-get install cmake;
      sudo apt-get install libffi-dev;
      sudo apt-get install libicu-dev;
      sudo apt-get install libxml2-dev;
      elif [ `uname` = "Darwin" ]; 
      then brew install libffi;
      brew install autoconf;
      brew install automake;
      brew install libtool;
      brew install pkg-config libffi;
      brew link --force libffi;
      brew install pkgconfig;
      brew install icu4c;
      brew link icu4c;
      brew install gettext;
      brew link gettext -—force;
      brew install boost;
      brew install libxml2;
      brew install cmake;
      brew install qt5;
      brew install eigen;
      fi

install:
  - if [ `uname` = "Linux" ]; then hg clone https://bitbucket.org/eigen/eigen#3.3 /tmp/eigen && mkdir /tmp/eigen-build && cd /tmp/eigen-build && cmake . /tmp/eigen && make && sudo make install && cd -; fi

before_script:
  - if [ `uname` = "Darwin" ];
      ln -s /usr/local/Cellar/icu4c/58.2/bin/icu-config /usr/local/bin/icu-config;
      ln -s /usr/local/Cellar/icu4c/58.2/include/* /usr/local/include;
    fi
  - if [ `uname` = "Linux" ];
    then export CC=$USE_CC; export CXX=$USE_CXX;
    export BUILD_ROOT=$(pwd);
    cd $HOME;
    curl https://netcologne.dl.sourceforge.net/project/boost/boost/1.62.0/boost_1_62_0.tar.bz2 | tar xj;
    pushd "boost_1_62_0";
    export GCC=$(which $CXX);
    echo -e "using gcc \x3a \x3a $GCC ;" > user-config.jam; cat user-config.jam;
    ./bootstrap.sh --prefix=/usr/local/boost --with-libraries=thread,date_time,filesystem,system,program_options,chrono,regex,locale;
    ./b2 -q -d0 --user-config=user-config.jam headers;
    sudo ./b2 -q -d0 --user-config=user-config.jam cxxflags="-std=c++11 -fPIC" threading=multi link=shared install;
    popd;
    fi

script:
  - echo ${COMPILER}
  - if [ `uname` = "Linux" ]; 
    then source /opt/qt55/bin/qt55-env.sh;
    fi

  - cd ${TRAVIS_BUILD_DIR} 
  - if [ $TRAVIS_OS_NAME == linux ];
    then cmake -G "Unix Makefiles" -DBOOST_ROOT=/usr/local/boost;
    fi
  - if [ $TRAVIS_OS_NAME == osx ];
    then export PATH=/usr/local/opt/qt5/bin:$PATH;
    cmake -G "Unix Makefiles";
    fi

  - make
  - make buildhelp
  - make package
  - make tests


notifications:
  email: false
