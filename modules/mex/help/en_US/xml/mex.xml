<?xml version="1.0" encoding="UTF-8"?>
<xmldoc>
	<copyright>SAME AS NELSON SOFTWARE</copyright>

	<language>en_US</language>
	<keyword>mex</keyword>
	<short_description>Build MEX function</short_description>

	<syntax>
		<syntax_item>mex(filenames)</syntax_item>
		<syntax_item>mex('-output', mexName, filenames)</syntax_item>
	</syntax>
	
	<param_input>
		<param_input_item>
			<param_name>filenames</param_name>
			<param_description>a string or cell of characters: list of files to use. First filename used as mex name.</param_description>
		</param_input_item>
		<param_input_item>
			<param_name>mexName</param_name>
			<param_description>a string: override naming convention.</param_description>
		</param_input_item>

	</param_input>

	<description>
		<p>Nelson includes an interface to allow legacy mex-files to be compiled and linked with Nelson.</p>
		<p>A mex file is a type of computer file that provides an interface between Octave or the reference commercial software and functions written in C, C++.</p>
		<p>Nelson have also his own C++ API to manage more easily internal nelson's objects.</p>
	</description>

	<used_function></used_function>
	<bibliography></bibliography>

<examples>
	<example_item>
		<example_item_type>nelson</example_item_type>
		<example_item_description></example_item_description>
		<example_item_data><![CDATA[
		edit([modulepath('mex'), '/tests/test_mexPrintf.nls'])
]]>
		</example_item_data>
	</example_item>

</examples>
	<see_also>
		<see_also_item>
			<link linkend="${dynamic_link}dlgenerategateway">dlgenerategateway</link>
		</see_also_item>
	</see_also>

	<history>
		<history_item>
			<history_version>1.0.0</history_version>
			<history_description>initial version</history_description>
		</history_item>
	</history>

	<authors>
		<author_item>Allan CORNET</author_item>
	</authors>
</xmldoc>


