//=============================================================================
// Copyright (c) 2016-2017 Allan CORNET (Nelson)
//=============================================================================
// LICENCE_BLOCK_BEGIN
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 2 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
// LICENCE_BLOCK_END
//=============================================================================
function Y = fft2(varargin)
// two-dimension fast Fourier transform
  nRhs = nargin();
  if ~(nRhs == 1 | nRhs == 3)
    error(_('Wrong number of input arguments.'));
  end
  X = varargin{1};
  if (nRhs == 1)
    if (ndims(X) == 1)
      Y = fftn(X);
    else
      Y = fft(fft(X, [], 2), [], 1);
    end
  else
    mr = varargin{2};
    nc = varargin{3};
    if (ndims(X) == 1)
       Y = fftn(X, [mr, nc]);
    else
       Y = fft(fft(X, nc, 2), mr, 1);
    end
  end
endfunction
//=============================================================================
