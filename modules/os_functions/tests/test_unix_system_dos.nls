//=============================================================================
// Copyright (c) 2016-2019 Allan CORNET (Nelson)
//=============================================================================
// LICENCE_BLOCK_BEGIN
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 2 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
// LICENCE_BLOCK_END
//=============================================================================
assert_isequal(nargin('unix'), 1);
assert_isequal(nargout('unix'), 2);
//=============================================================================
[a, b ] = unix('exit 33');
assert_isequal(a, 33);
//=============================================================================
binpath = modulepath(nelsonroot,'core','bin');
nelson_exe = [binpath, '/nelson-cli'];
cmd = [nelson_exe, ' --execute "exit(33)"'];
[a, b] = unix(cmd);
assert_isequal(a, 33);
//=============================================================================
binpath = modulepath(nelsonroot,'core','bin');
nelson_exe = [binpath, '/nelson-cli'];
cmd = [nelson_exe, ' --execute "a=35;exit(a);"'];
[a, b] = unix(cmd);
assert_isequal(a, 35);
//=============================================================================
cmd = 'cd';
[a, b] = unix(cmd);
assert_isequal(a, 0);
//=============================================================================
cmd = 'echo hello && echo world';
[a, b] = unix(cmd);
assert_isequal(a, 0);
if ispc()
  REF = sprintf('%s\n%s\n', 'hello ', 'world');
else
  REF = sprintf('%s\n%s\n', 'hello', 'world');
end
assert_isequal(b, REF);
//=============================================================================
if ispc()
  cmd = 'time';
else
  cmd = 'read v';
end
[a, b] = unix(cmd);
assert_isequal(a, 1);
//=============================================================================
[a, b] = unix('');
assert_isequal(a, 0);
assert_isequal(b, '');
//=============================================================================
[a, b] = unix('&');
assert_isequal(a, 0);
assert_isequal(b, '');
//=============================================================================
